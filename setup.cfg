[bumpversion]
current_version = 0.0.1
commit = True
tag = True
message = '{current_version} â†’ {new_version}'

[metadata]
license_file = LICENSE
name = elchempy
author = David Wallace
author_email = wdz.wallace@protonmail.com
description = A Python framework for the processing and analysis of different types of electrochemical experiments.
long_description = file:README.md
long_description_content_type = text/markdown
url = https://github.com/MyPyDavid/elchempy.git
project_urls =
	Source Code = https://github.com/MyPyDavid/elchempy.git
classifiers =
	License :: OSI Approved :: MIT License
	Natural Language :: English
	Programming Language :: Python
	Programming Language :: Python :: 3
	Programming Language :: Python :: 3.7
	Programming Language :: Python :: 3.8
	Programming Language :: Python :: Implementation :: CPython
	Programming Language :: Python :: Implementation :: PyPy
	Intended Audience :: Science/Research
	Topic :: Scientific/Engineering :: Physics
	Topic :: Scientific/Engineering :: Chemistry

[options]
python_requires = >=3.7.0
install_requires =
	pandas >= 1.0.0
	scipy >= 1.5.2
	lmfit >= 1.0.0
	matplotlib >= 3.1.2
	numpy >= 1.19.2
	openpyxl >= 3.0.1
include_package_data = True
package_dir =
	= src
packages = find:
namespace_packages = elchempy
#setup_requires = setuptools, setuptools_scm # do not include here! leads to error

[options.packages.find]
where = src
exclude =
	build*
	dist*
	docs*
	tests*
	*.tests
	tools*

[options.entry_points]
console_scripts =
	elchempy = elchempy.interfaces.cli:main

[options.extras_require]
testing =
	pytest
	pytest-cov
	pytest-flake8
	mock
	wheel
	pip>=19.1 # For proper file:// URLs support.
dev =
	isort
	pylint
	flake8
	autopep8
	pydocstyle
	bump2version

[tox:tox]

[aliases]
test = pytest

[check-manifest]
ignore =
	.github
	.github/*

[bumpversion:file:pyproject.toml]
search = fallback_version = '{current_version}'
replace = fallback_version = '{new_version}'

[bumpversion:file:src/elchempy/__init__.py]
search = __version__ = '{current_version}'
replace = __version__ = '{new_version}'

[coverage]
show_missing = true
precision = 2
omit = *migrations*

[coverage:paths]
source =
	src
	*/site-packages

[coverage:run]
branch = False
source =
	src
omit =
	*/tests/*
parallel = true

[coverage:report]
exclude_lines =
	pragma: no cover

	def __repr__
	if self\.debug

	raise AssertionError
	raise NotImplementedError

	if 0:
	if __name__ == .__main__.:

[pylint]
extension-pkg-whitelist = numpy, pandas, matplotlib, lmfit

[pydocstyle]
convention = numpy
match-dir = 'src\/.*'

[yapf]
based_on_style = pep8
dedent_closing_brackets = true
coalesce_brackets = true
split_complex_comprehension = true
split_before_dot = true

[tool:isort]
force_single_line = False
profile = black
src_paths = ["src", "test"]
line_length = 140
known_first_party = elchempy
default_section = THIRDPARTY
forced_separate = test_elchempy
skip = .tox,.eggs,ci/templates,build,dist
